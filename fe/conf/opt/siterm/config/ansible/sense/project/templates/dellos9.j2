#jinja2: lstrip_blocks: "True", trim_blocks: "True"
{##########################################
#Purpose:
#Configure VLAN Interface commands for dellos9 Devices
#interface:
#  Vlan 3617:
##    description: urn:ogf:network:service+c486b212-e79e-4edf-8022-8a82001a2768:vt+l2-policy::Connection_1
#    ip6_address: {ip: 'fc00:0:0:0:0:0:0:59/124', state: present}
#    name: Vlan 3617
#    state: present
#    tagged_members:
#    - {port: Port-channel 102, state: present}
#sense_bgp:
#  asn: '64513'
#  ipv6_network:
#  - {address: '2605:d9c0:2:fff1::/64', state: present}
#  neighbor:
#    ipv6:
#    - ip: fc00:0:0:0:0:0:0:5a/124
#      remote_asn: '64512'
#      route_map: {in: sense-087c394b793044b242393d21f67821c8-mapin, out: sense-087c394b793044b242393d21f67821c8-mapout}
#      state: present
#  prefix_list:
#  - {iprange: '2605:d9c0:2:fff1::/64', iptype: ipv6, name: sense-087c394b793044b242393d21f67821c8-to,
#    state: present}
#  - {iprange: '2605:d9c0:2:fff4::/64', iptype: ipv6, name: sense-087c394b793044b242393d21f67821c8-from,
#    state: present}
#  route_map:
#  - {match: sense-087c394b793044b242393d21f67821c8-to, name: sense-087c394b793044b242393d21f67821c8-mapout,
#    state: present}
#  - {match: sense-087c394b793044b242393d21f67821c8-from, name: sense-087c394b793044b242393d21f67821c8-mapin,
#    state: present}
#  state: present
#
#########################################}
{% if interface is defined and interface %}
{% for key,value in interface.items() %}
  {% set vlan_id = key.split(" ") %}
  {% set vlan_vars = interface[key] %}
  {% if vlan_vars.state is defined and vlan_vars.state == "absent" %}
no interface Vlan {{ vlan_id[1] }}
  {% else %}
interface Vlan {{ vlan_id[1] }}
    {% if vlan_vars.name is defined %}
      {% if vlan_vars.name %}
 name {{ vlan_vars.name }}
      {% else %}
 no name
      {% endif %}
    {% endif %}
    {% if vlan_vars.description is defined %}
      {% if vlan_vars.description %}
 description {{ vlan_vars.description }}
      {% else %}
 no description
      {% endif %}
    {% endif %}
    {% if vlan_vars.ip_address is defined %}
      {% set ip_vars = vlan_vars.ip_address %}
      {% if ip_vars.ip is defined and ip_vars.ip %}
        {% if ip_vars.state is defined and ip_vars.state == "absent" %}
 no ip address {{ ip_vars.ip }}
        {% else %}
 ip address {{ ip_vars.ip }}
        {% endif %}
      {% endif %}
    {% endif %}
    {% if vlan_vars.ip6_address is defined %}
      {% set ip6_vars = vlan_vars.ip6_address %}
      {% if ip6_vars.ip is defined and ip6_vars.ip %}
        {% if ip6_vars.state is defined and ip6_vars.state == "absent" %}
 no ipv6 address {{ ip6_vars.ip }}
        {% else %}
 ipv6 address {{ ip6_vars.ip }}
        {% endif %}
      {% endif %}
    {% endif %}
    {% if vlan_vars.tagged_members is defined %}
      {% for ports in vlan_vars.tagged_members %}
        {% if ports.port is defined and ports.port %}
          {% if ports.state is defined and ports.state == "absent" %}
 no tagged {{ ports.port }}
          {% else %}
 tagged {{ ports.port }}
          {% endif %}
        {% endif %}
      {% endfor %}
    {% endif %}
  {% endif %}
{% endfor %}
{% endif %}

{% if sense_bgp is defined and sense_bgp %}
{% set bgp = sense_bgp %}
  {% if bgp.asn is defined and bgp.asn %}
    {% if bgp.state is defined and bgp.state %}
router bgp {{ bgp.asn }}
      {% if bgp.ipv4_network is defined and bgp.ipv4_network %}
        {% for net in bgp.ipv4_network %}
          {% if net.address is defined and net.address %}
            {% if net.state is defined and net.state == "absent" %}
 no network {{ net.address }}
            {% else %}
 network {{ net.address }}
 address-family ipv4 multicast
  network {{ net.address }}
 exit-address-family
            {% endif %}
          {% endif %}
        {% endfor %}
      {% endif %}
      {% if bgp.ipv6_network is defined and bgp.ipv6_network %}
        {% for net in bgp.ipv6_network %}
          {% if net.address is defined and net.address %}
            {% if net.state is defined and net.state == "absent" %}
 address-family ipv6 unicast
  no network {{ net.address }}
 exit-address-family
            {% else %}
 address-family ipv6 unicast
  network {{ net.address }}
 exit-address-family
            {% endif %}
          {% endif %}
        {% endfor %}
      {% endif %}
      {% if bgp.neighbor is defined and bgp.neighbor %}
        {% if bgp.neighbor.ipv4 is defined and bgp.neighbor.ipv4 %}
          {% for neigh in bgp.neighbor.ipv4 %}
            {% if neigh.remote_asn is defined and neigh.remote_asn %}
              {% if neigh.ip is defined and neigh.ip %}
                {% if neigh.state is defined and neigh.state == "absent" %}
 no neighbor {{ neigh.ip.split("/")[0] }} remote-as {{ neigh.remote_asn }}
                {% else %}
 neighbor {{ neigh.ip.split("/")[0] }} remote-as {{ neigh.remote_asn }}
                  {% if neigh.route_map is defined and neigh.route_map %}
 address-family ipv4 multicast
  neighbor {{ neigh.ip.split("/")[0] }} activate
  neighbor {{ neigh.ip.split("/")[0] }} route-map {{ neigh.route_map.in }} in
  neighbor {{ neigh.ip.split("/")[0] }} route-map {{ neigh.route_map.out }} out
 exit-address-family
                  {% endif %}
                {% endif %}
              {% endif %}
            {% endif %}
          {% endfor %}
        {% endif %}
        {% if bgp.neighbor.ipv6 is defined and bgp.neighbor.ipv6 %}
          {% for neigh in bgp.neighbor.ipv6 %}
            {% if neigh.remote_asn is defined and neigh.remote_asn %}
              {% if neigh.ip is defined and neigh.ip %}
                {% if neigh.state is defined and neigh.state == "absent" %}
 address-family ipv6 unicast
 no neighbor {{ neigh.ip.split("/")[0] }} remote-as {{ neigh.remote_asn }}
                {% else %}
 address-family ipv6 unicast
 neighbor {{ neigh.ip.split("/")[0] }} remote-as {{ neigh.remote_asn }}
 neighbor {{ neigh.ip.split("/")[0] }} no shutdown
                  {% if neigh.route_map is defined and neigh.route_map %}
 address-family ipv6 unicast
  neighbor {{ neigh.ip.split("/")[0] }} activate
  neighbor {{ neigh.ip.split("/")[0] }} route-map {{ neigh.route_map.in }} in
  neighbor {{ neigh.ip.split("/")[0] }} route-map {{ neigh.route_map.out }} out
 exit-address-family
                  {% endif %}
                {% endif %}
              {% endif %}
            {% endif %}
          {% endfor %}
        {% endif %}
      {% endif %}
    {% endif %}
  {% endif %}
  {% if bgp.prefix_list is defined and bgp.prefix_list %}
    {% for prefix in bgp.prefix_list %}
      {% if prefix.iprange is defined and prefix.iprange %}
        {% if prefix.name is defined and prefix.name %}
          {% if prefix.state is defined and prefix.state == "absent" %}
            {% if prefix.iptype is defined and prefix.iptype == "ipv6" %}
no ipv6 prefix-list {{ prefix.name }}
            {% else %}
no ip prefix-list {{ prefix.name }}
            {% endif %}
          {% else %}
            {% if prefix.iptype is defined and prefix.iptype == "ipv6" %}
ipv6 prefix-list {{ prefix.name }}
 permit {{ prefix.iprange }}
            {% else %}
ip prefix-list {{ prefix.name }}
 permit {{ prefix.iprange }}
            {% endif %}
          {% endif %}
        {% endif %}
      {% endif %}
    {% endfor %}
  {% endif %}
  {% if bgp.route_map is defined and bgp.route_map %}
    {% for rmap in bgp.route_map %}
      {% if rmap.match is defined and rmap.match %}
        {% if rmap.name is defined and rmap.name %}
          {% if rmap.state is defined and rmap.state == "absent" %}
no route-map {{ rmap.name }} permit 10
          {% else %}
route-map {{ rmap.name }} permit 10
 match ip route-source prefix-list {{ rmap.match }}
          {% endif %}
        {% endif %}
      {% endif %}
    {% endfor %}
  {% endif %}
{% endif %}
